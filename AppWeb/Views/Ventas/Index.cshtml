@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
<h1>Ventas</h1>

<div id="app">

    <hr />

    <!--Formulario de Ventas-->

    <div class="input-group">
        <input v-model="nombreCliente" readonly type="text" class="form-control" />
        <button class="btn btn-primary btn-sm" v-on:click="seleccionarClientes">
            Buscar cliente
        </button>
    </div>
    <hr />

    <div class="row">
        <div class="col-lg-12">
            <button class="btn btn-primary" v-on:click="seleccionarProductos">
                +
            </button>
        </div>

    </div>

    <hr />
    <table class="table">
        <thead>
            <tr>
                <th>#</th>
                <th>Codigo</th>
                <th>Nombre</th>
                <th>Cantidad</th>
                <th>Precio Unitario</th>
                <th>Total</th>
            </tr>
        </thead>
        <tbody>

            <tr v-for="(item, index) in detalles">
                <td> {{index + 1}}</td>
                <td> {{item.codigo}}</td>
                <td> {{item.nombre}}</td>
                <td> <input type="number" v-model="item.cantidad" /> </td>
                <td> <input type="number" v-model="item.precio_venta" /></td>
                <td> {{(item.precio_venta * item.cantidad).toFixed(2)}}</td>


                <td>
                    <button class="btn btn-danger btn-sm" v-on:click="eliminarDetalle(item)">
                        -
                    </button>
                </td>
            </tr>
            <tr>
                <td align="right" colspan="6">Total</td>
                <td align="right" >{{(Total=calcularTotal).toFixed(2)}}</td>
            </tr>
            <tr>
                <td align="right" colspan="6">IVA ({{IVA}}%)</td>
                <td  align="right">{{(Impuesto = IVA * Total /100).toFixed(2)  }}</td>
            </tr>
            <tr>
                <td  align="right" colspan="6">Total Neto</td>
                <td  align="right">{{(TotalNeto = Total + Impuesto).toFixed(2)}}</td>
            </tr>
        </tbody>
    </table>

    <!--Lista de Clientes-->
    <div class="modal" id="MostrarClientesModal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Lista de clientes</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">

                    <table class="table">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>ID</th>
                                <th>Nombre</th>
                                <th>RFC</th>

                            </tr>
                        </thead>
                        <tbody>
                            <tr v-for="(item, index) in clientes">
                                <td> {{index + 1}}</td>
                                <td> {{item.id}}</td>
                                <td> {{item.nombre}}</td>
                                <td> {{item.rfc}}</td>
                                <td>
                                    <button class="btn btn-primary btn-sm" v-on:click="clienteSeleccionado(item)">
                                        Seleccionar
                                    </button>
                                </td>

                            </tr>


                        </tbody>
                    </table>
                </div>

            </div>
        </div>
    </div>

    <!--Lista de Productos-->
    <div class="modal" id="MostrarProductosModal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Lista de productos</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">

                    <table class="table">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>Codigo</th>
                                <th>Nombre</th>
                                <th>Precio</th>
                                <th>Existencia</th>


                            </tr>
                        </thead>
                        <tbody>
                            <tr v-for="(item, index) in productos">
                                <td> {{index + 1}}</td>
                                <td> {{item.codigo}}</td>
                                <td> {{item.nombre}}</td>
                                <td> {{item.precio_venta}}</td>
                                <td> {{item.existencia}}</td>

                                <td>
                                    <button class="btn btn-primary btn-sm" v-on:click="productoSeleccionado(item)">
                                        Seleccionar
                                    </button>
                                </td>

                            </tr>


                        </tbody>
                    </table>
                </div>

            </div>
        </div>
    </div>

</div> <!--fin id=app-->

@section Scripts{

    <script>var app = new Vue({
            el: '#app',
            data: {
                Ruta: "http://localhost:5000/api",
                clientes: [],
                productos: [],
                detalles: [],
                id: null,
                nombre: "",
                nombreCliente: "",
                Total: 0,
                IVA: 16,
                Impuesto: 0,
                TotalNeto: 0,
                activo: null,
                index: null,
                expresion: "",
                apiBuscar: "/Categorias/Todos"
            },
            created: function () {

            },
            computed: {

                calcularTotal: function () {
                    var resultado = 0.0;

                    for (let detalle of this.detalles) {
                    resultado = resultado + detalle.cantidad * detalle.precio_venta;
                    }

                    return resultado;
                }
            },

            methods: {
                // Operaciones con Clientes
                seleccionarClientes: function () {
                    this.obtenerClientes();
                    $("#MostrarClientesModal").modal('show');
                },
                obtenerClientes: function () {
                    var vm = this;
                    $.ajax({
                        url: this.Ruta + "/Clientes",
                        method: "GET",
                        dataType: 'JSON'
                    })
                        .done(function (resultado) {

                            if (resultado.estado == true) {
                                vm.clientes = resultado.info;
                                toastr.success("Datos cargados satisfactoriamente");

                            }
                            else
                                toastr.error(resultado.mensaje);


                        });



                },
                clienteSeleccionado: function (item) {

                    this.nombreCliente = item.nombre;
                    console.log(item);
                    idCliente = item.id;
                    $("#MostrarClientesModal").modal('hide');

                },
                // Operaciones con Productos
                seleccionarProductos: function () {
                    this.obtenerProductos();
                    $("#MostrarProductosModal").modal('show');
                },
                obtenerProductos: function () {
                    var vm = this;
                    $.ajax({
                        url: this.Ruta + "/Productos/Todos",
                        method: "GET",
                        dataType: 'JSON'
                    })
                        .done(function (resultado) {

                            if (resultado.estado == true) {
                                vm.productos = resultado.info;
                                toastr.success("Datos cargados satisfactoriamente");

                            }
                            else
                                toastr.error(resultado.mensaje);
                        });



                },
                productoSeleccionado: function (item) {

                    var detalle = {
                        id: item.id,
                        codigo: item.codigo,
                        nombre: item.nombre,
                        precio_venta: item.precio_venta,
                        cantidad: 1
                    }
                    if (this.validarDetalle(detalle)) {
                        this.detalles.push(detalle)
                    }
                    else {
                        toastr.error("Producto ya esta en la lista");
                    }

                    $("#MostrarProductosModal").modal('hide');

                },
                eliminarDetalle: function (item) {
                    var pos = this.detalles.indexOf(item);
                    this.detalles.splice(pos, 1);
                },
                validarDetalle: function(item){
                    for (let detalle of this.detalles) {
                        if (detalle.codigo == item.codigo)
                            return false;
                    }

                    return true;
                }


        /*,
                mostrarNuevaCategoria: function () {
                    this.nombre = "";
                    this.descripcion = "";
                    $("#NuevaCategoriaModal").modal('show');
                },
                guardarNuevaCategoria: function () {
                    var vm = this;
                    var nuevaCategoria = {
                        nombre: vm.nombre,
                        descripcion: vm.descripcion
                    }

                    $.ajax({
                        url: vm.Ruta + "/Categorias/Nueva",
                        data: JSON.stringify(nuevaCategoria),
                        method: "POST",
                        contentType: 'application/json',
                        dataType: 'JSON'
                    })
                        .done(function (resultado) {

                            if (resultado.estado == true) {
                                  toastr.success("Categoria guardada satisfactoriamente");
                                $("#NuevaCategoriaModal").modal('hide');
                                vm.obtenerCategorias();

                            }
                            else
                                toastr.error(resultado.mensaje);
                        });
                },
                mostrarEditarCategoria: function (item) {
                    this.id = item.id;
                    this.nombre = item.nombre;
                    this.descripcion = item.descripcion;
                    $("#MostrarEditarCategoriaModal").modal('show');
                }
                ,

                guardarEditarCategoria: function () {
                    var vm = this;
                    var modificaCategoria = {
                        nombre: vm.nombre,
                        descripcion: vm.descripcion
                    }

                    $.ajax({
                        url: vm.Ruta+"/Categorias/Actualizar/"+vm.id,
                        data: JSON.stringify(modificaCategoria),
                        method: "PUT",
                        contentType: 'application/json',
                        dataType: 'JSON'
                    })
                        .done(function (resultado) {

                            if (resultado.estado == true) {
                                toastr.success("Categoria actualizada satisfactoriamente");
                                $("#MostrarEditarCategoriaModal").modal('hide');
                                vm.obtenerCategorias();

                            }
                            else
                                toastr.error(resultado.mensaje);
                        });


                },
                Inactivar: function (item) {
                    var vm = this;

                    $.ajax({
                        url: vm.Ruta+"/Categorias/Inactivar/"+item.id,
                        //data: JSON.stringify(nuevaCategoria),
                        method: "DELETE",
                        contentType: 'application/json',
                        dataType: 'JSON'
                    })
                        .done(function (resultado) {

                            if (resultado.estado == true) {
                                toastr.success("Categoria inactivada");
                                vm.obtenerCategorias();

                            }
                            else
                                toastr.error(resultado.mensaje);
                        });
                },
                Activar: function (item) {
                    var vm = this;

                    $.ajax({
                        url: vm.Ruta + "/Categorias/Activar/"+ item.id,
                       // data: JSON.stringify(nuevaCategoria),
                        method: "DELETE",
                        contentType: 'application/json',
                        dataType: 'JSON'
                    })
                        .done(function (resultado) {

                            if (resultado.estado == true) {
                                toastr.success("Categoria activada");
                                vm.obtenerCategorias();

                            }
                            else
                                toastr.error(resultado.mensaje);
                        });
                },
                filtrarCategorias: function () {
                    if (this.expresion)
                        this.apiBuscar = "/Categorias/BuscarNombre/" + this.expresion;
                    else
                        this.apiBuscar = "/Categorias/Todos";

                    this.obtenerCategorias();
                }
                */
            }

        });</script>
}